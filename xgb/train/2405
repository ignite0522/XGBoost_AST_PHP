{"name":"[STMT_LIST:]","kind":132,"attr":0,"lineno":0,"children":[{"name":"[STMT_LIST:]","kind":132,"attr":0,"lineno":1,"children":[{"name":"[NAMESPACE:]","kind":541,"attr":0,"lineno":3,"children":[{"name":"[ZVAL:\"GuzzleHttp\"]","kind":64,"attr":0,"lineno":3,"val":"GuzzleHttp","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"NULL","children":[]}]},{"name":"[CLASS:\"RequestOptions\"]","kind":71,"attr":0,"start_lineno":12,"end_lineno":264,"flags":32,"val":"RequestOptions","val_cutoff":false,"val_tohex":false,"doc_comment":"2F2A2A0A202A205468697320636C61737320636F6E7461696E732061206C697374206F66206275696C742D696E2047757A7A6C652072657175657374206F7074696F6E732E0A202A0A202A204D6F726520646F63756D656E746174696F6E20666F722065616368206F7074696F6E2063616E20626520666F756E6420617420687474703A2F2F67757A7A6C657068702E6F72672F2E0A202A0A202A20406C696E6B20687474703A2F2F646F63732E67757A7A6C657068702E6F72672F656E2F76362F726571756573742D6F7074696F6E732E68746D6C0A202A2F","doc_comment_cutoff":false,"doc_comment_tohex":true,"children":[{"name":"NULL","children":[]},{"name":"NULL","children":[]},{"name":"[STMT_LIST:]","kind":132,"attr":0,"lineno":13,"children":[{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":35,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":35,"children":[{"name":"[ZVAL:\"ALLOW_REDIRECTS\"]","kind":64,"attr":0,"lineno":35,"val":"ALLOW_REDIRECTS","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"allow_redirects\"]","kind":64,"attr":0,"lineno":35,"val":"allow_redirects","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * allow_redirects: (bool|array) Controls redirect behavior. Pass false\\n     * to disable redirects, pass true to enable redirects, pass an\\n     * associative to provide custom redirect settings. Defaults to \\\"false\\\".\\n     * This option only works if your handler has the RedirectMiddleware. When\\n     * passing an associative array, you can provide the following key value\\n     * pairs:\\n     *\\n     * - max: (int, default=5) maximum number of allowed redirects.\\n     * - strict: (bool, default=false) Set to true to use strict redirects\\n     *   meaning redirect POST requests with POST requests vs. doing what most\\n     *   browsers do which is redirect POST requests with GET requests\\n     * - referer: (bool, default=false) Set to true to enable the Referer\\n     *   header.\\n     * - protocols: (array, default=['http', 'https']) Allowed redirect\\n     *   protocols.\\n     * - on_redirect: (callable) PHP callable that is invoked when a redirect\\n     *   is encountered. The callable is i","kind":64,"attr":0,"lineno":35,"valval_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":44,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":44,"children":[{"name":"[ZVAL:\"AUTH\"]","kind":64,"attr":0,"lineno":44,"val":"AUTH","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"auth\"]","kind":64,"attr":0,"lineno":44,"val":"auth","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * auth: (array) Pass an array of HTTP authentication parameters to use\\n     * with the request. The array must contain the username in index [0],\\n     * the password in index [1], and you can optionally provide a built-in\\n     * authentication type in index [2]. Pass null to disable authentication\\n     * for a request.\\n     *\\/\"]","kind":64,"attr":0,"lineno":44,"valval_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":50,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":50,"children":[{"name":"[ZVAL:\"BODY\"]","kind":64,"attr":0,"lineno":50,"val":"BODY","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"body\"]","kind":64,"attr":0,"lineno":50,"val":"body","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * body: (resource|string|null|int|float|StreamInterface|callable|\\\\Iterator)\\n     * Body to send in the request.\\n     *\\/\"]","kind":64,"attr":0,"lineno":50,"val":"2F2A2A0A20202020202A20626F64793A20287265736F757263657C737472696E677C6E756C6C7C696E747C666C6F61747C53747265616D496E746572666163657C63616C6C61626C657C5C4974657261746F72290A20202020202A20426F647920746F2073656E6420696E2074686520726571756573742E0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":59,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":59,"children":[{"name":"[ZVAL:\"CERT\"]","kind":64,"attr":0,"lineno":59,"val":"CERT","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"cert\"]","kind":64,"attr":0,"lineno":59,"val":"cert","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * cert: (string|array) Set to a string to specify the path to a file\\n     * containing a PEM formatted SSL client side certificate. If a password\\n     * is required, then set cert to an array containing the path to the PEM\\n     * file in the first array element followed by the certificate password\\n     * in the second array element.\\n     *\\/\"]","kind":64,"attr":0,"lineno":59,"valval_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":68,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":68,"children":[{"name":"[ZVAL:\"COOKIES\"]","kind":64,"attr":0,"lineno":68,"val":"COOKIES","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"cookies\"]","kind":64,"attr":0,"lineno":68,"val":"cookies","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * cookies: (bool|GuzzleHttp\\\\Cookie\\\\CookieJarInterface, default=false)\\n     * Specifies whether or not cookies are used in a request or what cookie\\n     * jar to use or what cookies to send. This option only works if your\\n     * handler has the `cookie` middleware. Valid values are `false` and\\n     * an instance of {@see \\\\GuzzleHttp\\\\Cookie\\\\CookieJarInterface}.\\n     *\\/\"]","kind":64,"attr":0,"lineno":68,"valval_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":75,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":75,"children":[{"name":"[ZVAL:\"CONNECT_TIMEOUT\"]","kind":64,"attr":0,"lineno":75,"val":"CONNECT_TIMEOUT","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"connect_timeout\"]","kind":64,"attr":0,"lineno":75,"val":"connect_timeout","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * connect_timeout: (float, default=0) Float describing the number of\\n     * seconds to wait while trying to connect to a server. Use 0 to wait\\n     * indefinitely (the default behavior).\\n     *\\/\"]","kind":64,"attr":0,"lineno":75,"val":"2F2A2A0A20202020202A20636F6E6E6563745F74696D656F75743A2028666C6F61742C2064656661756C743D302920466C6F61742064657363726962696E6720746865206E756D626572206F660A20202020202A207365636F6E647320746F2077616974207768696C6520747279696E6720746F20636F6E6E65637420746F2061207365727665722E20557365203020746F20776169740A20202020202A20696E646566696E6974656C7920287468652064656661756C74206265686176696F72292E0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":82,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":82,"children":[{"name":"[ZVAL:\"DEBUG\"]","kind":64,"attr":0,"lineno":82,"val":"DEBUG","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"debug\"]","kind":64,"attr":0,"lineno":82,"val":"debug","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * debug: (bool|resource) Set to true or set to a PHP stream returned by\\n     * fopen()  enable debug output with the HTTP handler used to send a\\n     * request.\\n     *\\/\"]","kind":64,"attr":0,"lineno":82,"val":"2F2A2A0A20202020202A2064656275673A2028626F6F6C7C7265736F75726365292053657420746F2074727565206F722073657420746F2061205048502073747265616D2072657475726E65642062790A20202020202A20666F70656E28292020656E61626C65206465627567206F757470757420776974682074686520485454502068616E646C6572207573656420746F2073656E6420610A20202020202A20726571756573742E0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":89,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":89,"children":[{"name":"[ZVAL:\"DECODE_CONTENT\"]","kind":64,"attr":0,"lineno":89,"val":"DECODE_CONTENT","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"decode_content\"]","kind":64,"attr":0,"lineno":89,"val":"decode_content","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * decode_content: (bool, default=true) Specify whether or not\\n     * Content-Encoding responses (gzip, deflate, etc.) are automatically\\n     * decoded.\\n     *\\/\"]","kind":64,"attr":0,"lineno":89,"val":"2F2A2A0A20202020202A206465636F64655F636F6E74656E743A2028626F6F6C2C2064656661756C743D747275652920537065636966792077686574686572206F72206E6F740A20202020202A20436F6E74656E742D456E636F64696E6720726573706F6E7365732028677A69702C206465666C6174652C206574632E2920617265206175746F6D61746963616C6C790A20202020202A206465636F6465642E0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":94,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":94,"children":[{"name":"[ZVAL:\"DELAY\"]","kind":64,"attr":0,"lineno":94,"val":"DELAY","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"delay\"]","kind":64,"attr":0,"lineno":94,"val":"delay","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * delay: (int) The amount of time to delay before sending in milliseconds.\\n     *\\/\"]","kind":64,"attr":0,"lineno":94,"val":"2F2A2A0A20202020202A2064656C61793A2028696E74292054686520616D6F756E74206F662074696D6520746F2064656C6179206265666F72652073656E64696E6720696E206D696C6C697365636F6E64732E0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":112,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":112,"children":[{"name":"[ZVAL:\"EXPECT\"]","kind":64,"attr":0,"lineno":112,"val":"EXPECT","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"expect\"]","kind":64,"attr":0,"lineno":112,"val":"expect","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * expect: (bool|integer) Controls the behavior of the\\n     * \\\"Expect: 100-Continue\\\" header.\\n     *\\n     * Set to `true` to enable the \\\"Expect: 100-Continue\\\" header for all\\n     * requests that sends a body. Set to `false` to disable the\\n     * \\\"Expect: 100-Continue\\\" header for all requests. Set to a number so that\\n     * the size of the payload must be greater than the number in order to send\\n     * the Expect header. Setting to a number will send the Expect header for\\n     * all requests in which the size of the payload cannot be determined or\\n     * where the body is not rewindable.\\n     *\\n     * By default, Guzzle will add the \\\"Expect: 100-Continue\\\" header when the\\n     * size of the body of a request is greater than 1 MB and a request is\\n     * using HTTP\\/1.1.\\n     *\\/\"]","kind":64,"attr":0,"lineno":112,"valval_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":120,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":120,"children":[{"name":"[ZVAL:\"FORM_PARAMS\"]","kind":64,"attr":0,"lineno":120,"val":"FORM_PARAMS","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"form_params\"]","kind":64,"attr":0,"lineno":120,"val":"form_params","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * form_params: (array) Associative array of form field names to values\\n     * where each value is a string or array of strings. Sets the Content-Type\\n     * header to application\\/x-www-form-urlencoded when no Content-Type header\\n     * is already present.\\n     *\\/\"]","kind":64,"attr":0,"lineno":120,"valval_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":126,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":126,"children":[{"name":"[ZVAL:\"HEADERS\"]","kind":64,"attr":0,"lineno":126,"val":"HEADERS","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"headers\"]","kind":64,"attr":0,"lineno":126,"val":"headers","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * headers: (array) Associative array of HTTP headers. Each value MUST be\\n     * a string or array of strings.\\n     *\\/\"]","kind":64,"attr":0,"lineno":126,"val":"2F2A2A0A20202020202A20686561646572733A2028617272617929204173736F63696174697665206172726179206F66204854545020686561646572732E20456163682076616C7565204D5553542062650A20202020202A206120737472696E67206F72206172726179206F6620737472696E67732E0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":134,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":134,"children":[{"name":"[ZVAL:\"HTTP_ERRORS\"]","kind":64,"attr":0,"lineno":134,"val":"HTTP_ERRORS","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"http_errors\"]","kind":64,"attr":0,"lineno":134,"val":"http_errors","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * http_errors: (bool, default=true) Set to false to disable exceptions\\n     * when a non- successful HTTP response is received. By default,\\n     * exceptions will be thrown for 4xx and 5xx responses. This option only\\n     * works if your handler has the `httpErrors` middleware.\\n     *\\/\"]","kind":64,"attr":0,"lineno":134,"val":"2F2A2A0A20202020202A20687474705F6572726F72733A2028626F6F6C2C2064656661756C743D74727565292053657420746F2066616C736520746F2064697361626C6520657863657074696F6E730A20202020202A207768656E2061206E6F6E2D207375636365737366756C204854545020726573706F6E73652069732072656365697665642E2042792064656661756C742C0A20202020202A20657863657074696F6E732077696C6C206265207468726F776E20666F722034787820616E642035787820726573706F6E7365732E2054686973206F7074696F6E206F6E6C790A20202020202A20776F726B7320696620796F75722068616E646C657220686173207468652060687474704572726F727360206D6964646C65776172652E0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":142,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":142,"children":[{"name":"[ZVAL:\"IDN_CONVERSION\"]","kind":64,"attr":0,"lineno":142,"val":"IDN_CONVERSION","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"idn_conversion\"]","kind":64,"attr":0,"lineno":142,"val":"idn_conversion","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * idn: (bool|int, default=true) A combination of IDNA_* constants for\\n     * idn_to_ascii() PHP's function (see \\\"options\\\" parameter). Set to false to\\n     * disable IDN support completely, or to true to use the default\\n     * configuration (IDNA_DEFAULT constant).\\n     *\\/\"]","kind":64,"attr":0,"lineno":142,"valval_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":149,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":149,"children":[{"name":"[ZVAL:\"JSON\"]","kind":64,"attr":0,"lineno":149,"val":"JSON","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"json\"]","kind":64,"attr":0,"lineno":149,"val":"json","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * json: (mixed) Adds JSON data to a request. The provided value is JSON\\n     * encoded and a Content-Type header of application\\/json will be added to\\n     * the request if no Content-Type header is already present.\\n     *\\/\"]","kind":64,"attr":0,"lineno":149,"val":"2F2A2A0A20202020202A206A736F6E3A20286D69786564292041646473204A534F4E206461746120746F206120726571756573742E205468652070726F76696465642076616C7565206973204A534F4E0A20202020202A20656E636F64656420616E64206120436F6E74656E742D5479706520686561646572206F66206170706C69636174696F6E2F6A736F6E2077696C6C20626520616464656420746F0A20202020202A207468652072657175657374206966206E6F20436F6E74656E742D547970652068656164657220697320616C72656164792070726573656E742E0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":160,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":160,"children":[{"name":"[ZVAL:\"MULTIPART\"]","kind":64,"attr":0,"lineno":160,"val":"MULTIPART","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"multipart\"]","kind":64,"attr":0,"lineno":160,"val":"multipart","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * multipart: (array) Array of associative arrays, each containing a\\n     * required \\\"name\\\" key mapping to the form field, name, a required\\n     * \\\"contents\\\" key mapping to a StreamInterface|resource|string, an\\n     * optional \\\"headers\\\" associative array of custom headers, and an\\n     * optional \\\"filename\\\" key mapping to a string to send as the filename in\\n     * the part. If no \\\"filename\\\" key is present, then no \\\"filename\\\" attribute\\n     * will be added to the part.\\n     *\\/\"]","kind":64,"attr":0,"lineno":160,"valval_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":167,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":167,"children":[{"name":"[ZVAL:\"ON_HEADERS\"]","kind":64,"attr":0,"lineno":167,"val":"ON_HEADERS","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"on_headers\"]","kind":64,"attr":0,"lineno":167,"val":"on_headers","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * on_headers: (callable) A callable that is invoked when the HTTP headers\\n     * of the response have been received but the body has not yet begun to\\n     * download.\\n     *\\/\"]","kind":64,"attr":0,"lineno":167,"val":"2F2A2A0A20202020202A206F6E5F686561646572733A202863616C6C61626C652920412063616C6C61626C65207468617420697320696E766F6B6564207768656E20746865204854545020686561646572730A20202020202A206F662074686520726573706F6E73652068617665206265656E207265636569766564206275742074686520626F647920686173206E6F742079657420626567756E20746F0A20202020202A20646F776E6C6F61642E0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":178,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":178,"children":[{"name":"[ZVAL:\"ON_STATS\"]","kind":64,"attr":0,"lineno":178,"val":"ON_STATS","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"on_stats\"]","kind":64,"attr":0,"lineno":178,"val":"on_stats","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * on_stats: (callable) allows you to get access to transfer statistics of\\n     * a request and access the lower level transfer details of the handler\\n     * associated with your client. ``on_stats`` is a callable that is invoked\\n     * when a handler has finished sending a request. The callback is invoked\\n     * with transfer statistics about the request, the response received, or\\n     * the error encountered. Included in the data is the total amount of time\\n     * taken to send the request.\\n     *\\/\"]","kind":64,"attr":0,"lineno":178,"valval_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":187,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":187,"children":[{"name":"[ZVAL:\"PROGRESS\"]","kind":64,"attr":0,"lineno":187,"val":"PROGRESS","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"progress\"]","kind":64,"attr":0,"lineno":187,"val":"progress","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * progress: (callable) Defines a function to invoke when transfer\\n     * progress is made. The function accepts the following positional\\n     * arguments: the total number of bytes expected to be downloaded, the\\n     * number of bytes downloaded so far, the number of bytes expected to be\\n     * uploaded, the number of bytes uploaded so far.\\n     *\\/\"]","kind":64,"attr":0,"lineno":187,"valval_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":194,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":194,"children":[{"name":"[ZVAL:\"PROXY\"]","kind":64,"attr":0,"lineno":194,"val":"PROXY","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"proxy\"]","kind":64,"attr":0,"lineno":194,"val":"proxy","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * proxy: (string|array) Pass a string to specify an HTTP proxy, or an\\n     * array to specify different proxies for different protocols (where the\\n     * key is the protocol and the value is a proxy string).\\n     *\\/\"]","kind":64,"attr":0,"lineno":194,"val":"2F2A2A0A20202020202A2070726F78793A2028737472696E677C6172726179292050617373206120737472696E6720746F207370656369667920616E20485454502070726F78792C206F7220616E0A20202020202A20617272617920746F207370656369667920646966666572656E742070726F7869657320666F7220646966666572656E742070726F746F636F6C7320287768657265207468650A20202020202A206B6579206973207468652070726F746F636F6C20616E64207468652076616C756520697320612070726F787920737472696E67292E0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":202,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":202,"children":[{"name":"[ZVAL:\"QUERY\"]","kind":64,"attr":0,"lineno":202,"val":"QUERY","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"query\"]","kind":64,"attr":0,"lineno":202,"val":"query","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * query: (array|string) Associative array of query string values to add\\n     * to the request. This option uses PHP's http_build_query() to create\\n     * the string representation. Pass a string value if you need more\\n     * control than what this method provides\\n     *\\/\"]","kind":64,"attr":0,"lineno":202,"valval_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":209,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":209,"children":[{"name":"[ZVAL:\"SINK\"]","kind":64,"attr":0,"lineno":209,"val":"SINK","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"sink\"]","kind":64,"attr":0,"lineno":209,"val":"sink","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * sink: (resource|string|StreamInterface) Where the data of the\\n     * response is written to. Defaults to a PHP temp stream. Providing a\\n     * string will write data to a file by the given name.\\n     *\\/\"]","kind":64,"attr":0,"lineno":209,"val":"2F2A2A0A20202020202A2073696E6B3A20287265736F757263657C737472696E677C53747265616D496E7465726661636529205768657265207468652064617461206F66207468650A20202020202A20726573706F6E7365206973207772697474656E20746F2E2044656661756C747320746F2061205048502074656D702073747265616D2E2050726F766964696E6720610A20202020202A20737472696E672077696C6C207772697465206461746120746F20612066696C652062792074686520676976656E206E616D652E0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":217,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":217,"children":[{"name":"[ZVAL:\"SYNCHRONOUS\"]","kind":64,"attr":0,"lineno":217,"val":"SYNCHRONOUS","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"synchronous\"]","kind":64,"attr":0,"lineno":217,"val":"synchronous","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * synchronous: (bool) Set to true to inform HTTP handlers that you intend\\n     * on waiting on the response. This can be useful for optimizations. Note\\n     * that a promise is still returned if you are using one of the async\\n     * client methods.\\n     *\\/\"]","kind":64,"attr":0,"lineno":217,"valval_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":225,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":225,"children":[{"name":"[ZVAL:\"SSL_KEY\"]","kind":64,"attr":0,"lineno":225,"val":"SSL_KEY","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"ssl_key\"]","kind":64,"attr":0,"lineno":225,"val":"ssl_key","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * ssl_key: (array|string) Specify the path to a file containing a private\\n     * SSL key in PEM format. If a password is required, then set to an array\\n     * containing the path to the SSL key in the first array element followed\\n     * by the password required for the certificate in the second element.\\n     *\\/\"]","kind":64,"attr":0,"lineno":225,"valval_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":231,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":231,"children":[{"name":"[ZVAL:\"STREAM\"]","kind":64,"attr":0,"lineno":231,"val":"STREAM","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"stream\"]","kind":64,"attr":0,"lineno":231,"val":"stream","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * stream: Set to true to attempt to stream a response rather than\\n     * download it all up-front.\\n     *\\/\"]","kind":64,"attr":0,"lineno":231,"val":"2F2A2A0A20202020202A2073747265616D3A2053657420746F207472756520746F20617474656D707420746F2073747265616D206120726573706F6E736520726174686572207468616E0A20202020202A20646F776E6C6F616420697420616C6C2075702D66726F6E742E0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":241,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":241,"children":[{"name":"[ZVAL:\"VERIFY\"]","kind":64,"attr":0,"lineno":241,"val":"VERIFY","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"verify\"]","kind":64,"attr":0,"lineno":241,"val":"verify","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * verify: (bool|string, default=true) Describes the SSL certificate\\n     * verification behavior of a request. Set to true to enable SSL\\n     * certificate verification using the system CA bundle when available\\n     * (the default). Set to false to disable certificate verification (this\\n     * is insecure!). Set to a string to provide the path to a CA bundle on\\n     * disk to enable verification using a custom certificate.\\n     *\\/\"]","kind":64,"attr":0,"lineno":241,"valval_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":247,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":247,"children":[{"name":"[ZVAL:\"TIMEOUT\"]","kind":64,"attr":0,"lineno":247,"val":"TIMEOUT","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"timeout\"]","kind":64,"attr":0,"lineno":247,"val":"timeout","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * timeout: (float, default=0) Float describing the timeout of the\\n     * request in seconds. Use 0 to wait indefinitely (the default behavior).\\n     *\\/\"]","kind":64,"attr":0,"lineno":247,"val":"2F2A2A0A20202020202A2074696D656F75743A2028666C6F61742C2064656661756C743D302920466C6F61742064657363726962696E67207468652074696D656F7574206F66207468650A20202020202A207265717565737420696E207365636F6E64732E20557365203020746F207761697420696E646566696E6974656C7920287468652064656661756C74206265686176696F72292E0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":253,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":253,"children":[{"name":"[ZVAL:\"READ_TIMEOUT\"]","kind":64,"attr":0,"lineno":253,"val":"READ_TIMEOUT","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"read_timeout\"]","kind":64,"attr":0,"lineno":253,"val":"read_timeout","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * read_timeout: (float, default=default_socket_timeout ini setting) Float describing\\n     * the body read timeout, for stream requests.\\n     *\\/\"]","kind":64,"attr":0,"lineno":253,"val":"2F2A2A0A20202020202A20726561645F74696D656F75743A2028666C6F61742C2064656661756C743D64656661756C745F736F636B65745F74696D656F757420696E692073657474696E672920466C6F61742064657363726962696E670A20202020202A2074686520626F647920726561642074696D656F75742C20666F722073747265616D2072657175657374732E0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":258,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":258,"children":[{"name":"[ZVAL:\"VERSION\"]","kind":64,"attr":0,"lineno":258,"val":"VERSION","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"version\"]","kind":64,"attr":0,"lineno":258,"val":"version","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * version: (float) Specifies the HTTP protocol version to attempt to use.\\n     *\\/\"]","kind":64,"attr":0,"lineno":258,"val":"2F2A2A0A20202020202A2076657273696F6E3A2028666C6F617429205370656369666965732074686520485454502070726F746F636F6C2076657273696F6E20746F20617474656D707420746F207573652E0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"[CLASS_CONST_DECL:]","kind":140,"attr":1,"lineno":263,"children":[{"name":"[CONST_ELEM:]","kind":775,"attr":0,"lineno":263,"children":[{"name":"[ZVAL:\"FORCE_IP_RESOLVE\"]","kind":64,"attr":0,"lineno":263,"val":"FORCE_IP_RESOLVE","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"force_ip_resolve\"]","kind":64,"attr":0,"lineno":263,"val":"force_ip_resolve","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"[ZVAL:\"\\/**\\n     * force_ip_resolve: (bool) Force client to use only ipv4 or ipv6 protocol\\n     *\\/\"]","kind":64,"attr":0,"lineno":263,"val":"2F2A2A0A20202020202A20666F7263655F69705F7265736F6C76653A2028626F6F6C2920466F72636520636C69656E7420746F20757365206F6E6C792069707634206F7220697076362070726F746F636F6C0A20202020202A2F","val_cutoff":false,"val_tohex":true,"children":[]}]}]}]},{"name":"NULL","children":[]}]}]}]}