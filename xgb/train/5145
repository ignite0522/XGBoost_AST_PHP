{"name":"[STMT_LIST:]","kind":132,"attr":0,"lineno":0,"children":[{"name":"[STMT_LIST:]","kind":132,"attr":0,"lineno":1,"children":[{"name":"[NAMESPACE:]","kind":541,"attr":0,"lineno":3,"children":[{"name":"[ZVAL:\"Illuminate\\\\Queue\"]","kind":64,"attr":0,"lineno":3,"val":"Illuminate\\Queue","val_cutoff":false,"val_tohex":false,"children":[]},{"name":"NULL","children":[]}]},{"name":"[CLASS:\"LuaScripts\"]","kind":71,"attr":0,"start_lineno":5,"end_lineno":148,"flags":0,"val":"LuaScripts","val_cutoff":false,"val_tohex":false,"children":[{"name":"NULL","children":[]},{"name":"NULL","children":[]},{"name":"[STMT_LIST:]","kind":132,"attr":0,"lineno":6,"children":[{"name":"[METHOD:\"size\"]","kind":70,"attr":0,"start_lineno":16,"end_lineno":21,"flags":17,"val":"size","val_cutoff":false,"val_tohex":false,"doc_commentdoc_comment_cutoff":false,"doc_comment_tohex":true,"children":[{"name":"[PARAM_LIST:]","kind":136,"attr":0,"lineno":16,"children":[]},{"name":"NULL","children":[]},{"name":"[STMT_LIST:]","kind":132,"attr":0,"lineno":17,"children":[{"name":"[RETURN:]","kind":279,"attr":0,"lineno":19,"children":[{"name":"[ZVAL:\"return redis.call('llen', KEYS[1]) + redis.call('zcard', KEYS[2]) + redis.call('zcard', KEYS[3])\"]","kind":64,"attr":0,"lineno":19,"val":"return redis.call('llen', KEYS[1]) + redis.call('zcard', KEYS[2]) + redis.call('zcard', KEYS[3])","val_cutoff":false,"val_tohex":false,"children":[]}]}]},{"name":"NULL","children":[]}]},{"name":"[METHOD:\"push\"]","kind":70,"attr":0,"start_lineno":32,"end_lineno":40,"flags":17,"val":"push","val_cutoff":false,"val_tohex":false,"doc_comment":"2F2A2A0A20202020202A2047657420746865204C75612073637269707420666F722070757368696E67206A6F6273206F6E746F207468652071756575652E0A20202020202A0A20202020202A204B4559535B315D202D2054686520717565756520746F207075736820746865206A6F62206F6E746F2C20666F72206578616D706C653A207175657565733A666F6F0A20202020202A204B4559535B325D202D20546865206E6F74696669636174696F6E206C69737420666F7220746865207175657565207765206172652070757368696E67206A6F6273206F6E746F2C20666F72206578616D706C653A207175657565733A666F6F3A6E6F746966790A20202020202A20415247565B315D202D20546865206A6F62207061796C6F61640A20202020202A0A20202020202A204072657475726E20737472696E670A20202020202A2F","doc_comment_cutoff":false,"doc_comment_tohex":true,"children":[{"name":"[PARAM_LIST:]","kind":136,"attr":0,"lineno":32,"children":[]},{"name":"NULL","children":[]},{"name":"[STMT_LIST:]","kind":132,"attr":0,"lineno":33,"children":[{"name":"[RETURN:]","kind":279,"attr":0,"lineno":35,"children":[{"name":"[ZVAL:\"-- Push the job onto the queue...\\nredis.call('rpush', KEYS[1], ARGV[1])\\n-- Push a notification onto the \\\"notify\\\" queue...\\nredis.call('rpush', KEYS[2], 1)\"]","kind":64,"attr":0,"lineno":35,"val":"2D2D205075736820746865206A6F62206F6E746F207468652071756575652E2E2E0A72656469732E63616C6C28277270757368272C204B4559535B315D2C20415247565B315D290A2D2D20507573682061206E6F74696669636174696F6E206F6E746F2074686520226E6F74696679222071756575652E2E2E0A72656469732E63616C6C28277270757368272C204B4559535B325D2C203129","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"NULL","children":[]}]},{"name":"[METHOD:\"pop\"]","kind":70,"attr":0,"start_lineno":52,"end_lineno":70,"flags":17,"val":"pop","val_cutoff":false,"val_tohex":false,"doc_commentdoc_comment_cutoff":false,"doc_comment_tohex":true,"children":[{"name":"[PARAM_LIST:]","kind":136,"attr":0,"lineno":52,"children":[]},{"name":"NULL","children":[]},{"name":"[STMT_LIST:]","kind":132,"attr":0,"lineno":53,"children":[{"name":"[RETURN:]","kind":279,"attr":0,"lineno":55,"children":[{"name":"[ZVAL:\"-- Pop the first job off of the queue...\\nlocal job = redis.call('lpop', KEYS[1])\\nlocal reserved = false\\n\\nif(job ~= false) then\\n    -- Increment the attempt count and place job on the reserved queue...\\n    reserved = cjson.decode(job)\\n    reserved['attempts'] = reserved['attempts'] + 1\\n    reserved = cjson.encode(reserved)\\n    redis.call('zadd', KEYS[2], ARGV[1], reserved)\\n    redis.call('lpop', KEYS[3])\\nend\\n\\nreturn {job, reserved}\"]","kind":64,"attr":0,"lineno":55,"valval_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"NULL","children":[]}]},{"name":"[METHOD:\"release\"]","kind":70,"attr":0,"start_lineno":82,"end_lineno":93,"flags":17,"val":"release","val_cutoff":false,"val_tohex":false,"doc_commentdoc_comment_cutoff":false,"doc_comment_tohex":true,"children":[{"name":"[PARAM_LIST:]","kind":136,"attr":0,"lineno":82,"children":[]},{"name":"NULL","children":[]},{"name":"[STMT_LIST:]","kind":132,"attr":0,"lineno":83,"children":[{"name":"[RETURN:]","kind":279,"attr":0,"lineno":85,"children":[{"name":"[ZVAL:\"-- Remove the job from the current queue...\\nredis.call('zrem', KEYS[2], ARGV[1])\\n\\n-- Add the job onto the \\\"delayed\\\" queue...\\nredis.call('zadd', KEYS[1], ARGV[2], ARGV[1])\\n\\nreturn true\"]","kind":64,"attr":0,"lineno":85,"val":"2D2D2052656D6F766520746865206A6F622066726F6D207468652063757272656E742071756575652E2E2E0A72656469732E63616C6C28277A72656D272C204B4559535B325D2C20415247565B315D290A0A2D2D2041646420746865206A6F62206F6E746F20746865202264656C61796564222071756575652E2E2E0A72656469732E63616C6C28277A616464272C204B4559535B315D2C20415247565B325D2C20415247565B315D290A0A72657475726E2074727565","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"NULL","children":[]}]},{"name":"[METHOD:\"migrateExpiredJobs\"]","kind":70,"attr":0,"start_lineno":105,"end_lineno":128,"flags":17,"val":"migrateExpiredJobs","val_cutoff":false,"val_tohex":false,"doc_commentdoc_comment_cutoff":false,"doc_comment_tohex":true,"children":[{"name":"[PARAM_LIST:]","kind":136,"attr":0,"lineno":105,"children":[]},{"name":"NULL","children":[]},{"name":"[STMT_LIST:]","kind":132,"attr":0,"lineno":106,"children":[{"name":"[RETURN:]","kind":279,"attr":0,"lineno":108,"children":[{"name":"[ZVAL:\"-- Get all of the jobs with an expired \\\"score\\\"...\\nlocal val = redis.call('zrangebyscore', KEYS[1], '-inf', ARGV[1])\\n\\n-- If we have values in the array, we will remove them from the first queue\\n-- and add them onto the destination queue in chunks of 100, which moves\\n-- all of the appropriate jobs onto the destination queue very safely.\\nif(next(val) ~= nil) then\\n    redis.call('zremrangebyrank', KEYS[1], 0, #val - 1)\\n\\n    for i = 1, #val, 100 do\\n        redis.call('rpush', KEYS[2], unpack(val, i, math.min(i+99, #val)))\\n        -- Push a notification for every job that was migrated...\\n        for j = i, math.min(i+99, #val) do\\n            redis.call('rpush', KEYS[3], 1)\\n        end\\n    end\\nend\\n\\nreturn val\"]","kind":64,"attr":0,"lineno":108,"val":"2D2D2047657420616C6C206F6620746865206A6F6273207769746820616E2065787069726564202273636F7265222E2E2E0A6C6F63616C2076616C203D2072656469732E63616C6C28277A72616E6765627973636F7265272C204B4559535B315D2C20272D696E66272C20415247565B315D290A0A2D2D20496620776520686176652076616C75657320696E207468652061727261792C2077652077696C6C2072656D6F7665207468656D2066726F6D207468652066697273742071756575650A2D2D20616E6420616464207468656D206F6E746F207468652064657374696E6174696F6E20717565756520696E206368756E6B73206F66203130302C207768696368206D6F7665730A2D2D20616C6C206F662074686520617070726F707269617465206A6F6273206F6E746F207468652064657374696E6174696F6E207175657565207665727920736166656C792E0A6966286E6578742876616C29207E3D206E696C29207468656E0A2020202072656469732E63616C6C28277A72656D72616E6765627972616E6B272C204B4559535B315D2C20302C202376616C202D2031290A0A20202020666F722069203D20312C202376616C2C2031303020646F0A202020202020202072656469732E63616C6C28277270757368272C204B4559535B325D2C20756E7061636B2876616C2C20692C206D6174682E6D696E28692B39392C202376616C2929290A20202020202020202D2D20507573682061206E6F74696669636174696F6E20666F72206576657279206A6F62207468617420776173206D696772617465642E2E2E0A2020202020202020666F72206A203D20692C206D6174682E6D696E28692B39392C202376616C2920646F0A20202020202020202020202072656469732E63616C6C28277270757368272C204B4559535B335D2C2031290A2020202020202020656E640A20202020656E640A656E640A0A72657475726E2076616C","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"NULL","children":[]}]},{"name":"[METHOD:\"clear\"]","kind":70,"attr":0,"start_lineno":140,"end_lineno":147,"flags":17,"val":"clear","val_cutoff":false,"val_tohex":false,"doc_commentdoc_comment_cutoff":false,"doc_comment_tohex":true,"children":[{"name":"[PARAM_LIST:]","kind":136,"attr":0,"lineno":140,"children":[]},{"name":"NULL","children":[]},{"name":"[STMT_LIST:]","kind":132,"attr":0,"lineno":141,"children":[{"name":"[RETURN:]","kind":279,"attr":0,"lineno":143,"children":[{"name":"[ZVAL:\"local size = redis.call('llen', KEYS[1]) + redis.call('zcard', KEYS[2]) + redis.call('zcard', KEYS[3])\\nredis.call('del', KEYS[1], KEYS[2], KEYS[3], KEYS[4])\\nreturn size\"]","kind":64,"attr":0,"lineno":143,"val":"6C6F63616C2073697A65203D2072656469732E63616C6C28276C6C656E272C204B4559535B315D29202B2072656469732E63616C6C28277A63617264272C204B4559535B325D29202B2072656469732E63616C6C28277A63617264272C204B4559535B335D290A72656469732E63616C6C282764656C272C204B4559535B315D2C204B4559535B325D2C204B4559535B335D2C204B4559535B345D290A72657475726E2073697A65","val_cutoff":false,"val_tohex":true,"children":[]}]}]},{"name":"NULL","children":[]}]}]},{"name":"NULL","children":[]}]}]}]}